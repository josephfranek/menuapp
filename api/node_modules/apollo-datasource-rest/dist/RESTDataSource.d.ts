import { HTTPCache } from './HTTPCache';
export declare type Params = {
    [name: string]: any;
};
export declare abstract class RESTDataSource<TContext = any> {
    abstract baseURL: string;
    httpCache: HTTPCache;
    context: TContext;
    willSendRequest?(request: Request): void;
    willReceiveCache(httpCache: HTTPCache): void;
    willReceiveContext(context: TContext): void;
    protected get(path: string, params?: Params, options?: RequestInit): Promise<any>;
    protected post(path: string, params?: Params, options?: RequestInit): Promise<any>;
    protected put(path: string, params?: Params, options?: RequestInit): Promise<any>;
    protected delete(path: string, params?: Params, options?: RequestInit): Promise<any>;
    private fetch;
    private trace;
}
//# sourceMappingURL=RESTDataSource.d.ts.map