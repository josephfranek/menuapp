import 'apollo-server-env';
export { runQuery } from './runQuery';
export { LogFunction, LogMessage, LogStep, LogAction } from './logging';
export { runHttpQuery, HttpQueryRequest, HttpQueryError } from './runHttpQuery';
export { default as GraphQLOptions, resolveGraphqlOptions, PersistedQueryOptions, } from './graphqlOptions';
export { ApolloError, toApolloError, SyntaxError, ValidationError, AuthenticationError, ForbiddenError, BadUserInputError, formatApolloErrors, } from './errors';
export { convertNodeHttpToRequest } from './nodeHttpToRequest';
export { ApolloServerBase } from './ApolloServer';
export * from './types';
export * from 'graphql-tools';
export * from 'graphql-subscriptions';
import { DocumentNode } from 'graphql';
export declare const gql: (template: TemplateStringsArray, ...substitutions: any[]) => DocumentNode;
//# sourceMappingURL=index.d.ts.map