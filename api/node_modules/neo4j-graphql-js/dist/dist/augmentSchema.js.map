{"version":3,"sources":["../augmentSchema.js"],"names":["Object","defineProperty","exports","value","_keys","require","_keys2","_interopRequireDefault","addMutationsToSchema","_graphqlTools","_index","_graphql","_utils","obj","__esModule","default","schema","types","typesToAugment","mutationSchemaSDL","printSchema","mutationSchemaSDLWithTypesAndMutations","augmentMutations","resolvers","reduce","acc","t","Mutation","neo4jgraphql","forEach","addRelationshipMutations","getTypeMap","m","Query","getQueryType","getFields","args","context","info","mergeInfo","delegateToSchema","operation","fieldName","mutationSchema","makeExecutableSchema","typeDefs","onTypeConflict","left","right","finalSchema","mergeSchemas","schemas","filter","astNode","undefined","kind","augmentTypes","sdl","createMutation","type","name","paramSignature","namesOnly","arguments","length","mutations","mutationNames","relationshipFields","x","i","directives","relationDirective","d","relTypeArg","directionArg","fromType","toType","a","e","Error","innerType","fromPk","primaryKey","toPk","lowFirstLetter","push","pk","firstNonNullAndIdField","firstIdField","firstNonNullField","firstField","f","ofType","fields","constructor"],"mappings":"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","file":"augmentSchema.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.addMutationsToSchema = addMutationsToSchema;\n\nvar _graphqlTools = require('graphql-tools');\n\nvar _index = require('./index');\n\nvar _graphql = require('graphql');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addMutationsToSchema(schema) {\n  var types = typesToAugment(schema);\n\n  // FIXME: don't use printSchema (custom directives are lost), instead use extend schema\n  // FIXME: type extensions are lost\n  var mutationSchemaSDL = (0, _graphql.printSchema)(schema);\n\n  // TODO: compose augment funcs\n  //let mutationSchemaSDLWithTypes = augmentTypes(types, schema, mutationSchemaSDL);\n\n  var mutationSchemaSDLWithTypesAndMutations = augmentMutations(types, schema, mutationSchemaSDL);\n  //console.log(mutationSchemaSDLWithTypesAndMutations);\n\n  var resolvers = types.reduce(function (acc, t) {\n    // FIXME: inspect actual mutations, not construct mutation names here\n    acc.Mutation['Create' + t] = _index.neo4jgraphql;\n    types.forEach(function (t) {\n      addRelationshipMutations(schema.getTypeMap()[t], true).forEach(function (m) {\n        acc.Mutation[m] = _index.neo4jgraphql;\n      });\n    });\n\n    return acc;\n  }, { Mutation: {}, Query: {} });\n\n  // delegate query resolvers to original schema\n  resolvers = (0, _keys2.default)(schema.getQueryType().getFields()).reduce(function (acc, t) {\n    acc.Query[t] = function (obj, args, context, info) {\n      return info.mergeInfo.delegateToSchema({\n        schema: schema,\n        operation: 'query',\n        fieldName: t,\n        args: args,\n        context: context,\n        info: info\n      });\n    };\n    return acc;\n  }, resolvers);\n\n  var mutationSchema = (0, _graphqlTools.makeExecutableSchema)({\n    typeDefs: mutationSchemaSDLWithTypesAndMutations,\n    resolvers: resolvers\n  });\n\n  var onTypeConflict = function onTypeConflict(left, right, info) {\n    // FIXME: throws away type extensions\n    // FIXME: use schema transform for type augmentation\n    return left;\n  };\n\n  // TODO: ensure onTypeConflict is handled correctly\n  // see: https://www.apollographql.com/docs/graphql-tools/schema-stitching.html#mergeSchemas\n  var finalSchema = (0, _graphqlTools.mergeSchemas)({\n    schemas: [schema, mutationSchema],\n    resolvers: resolvers,\n    onTypeConflict: onTypeConflict\n  });\n\n  return finalSchema;\n}\n\n/**\n * Given a GraphQLSchema return an array of the type names,\n * excluding Query and Mutation types\n * @param {GraphQLSchema} schema\n * @returns {string[]}\n */\nfunction typesToAugment(schema) {\n  // TODO: check for @ignore and @model directives\n  return (0, _keys2.default)(schema.getTypeMap()).filter(function (t) {\n    return schema.getTypeMap()[t].astNode === undefined ? false : schema.getTypeMap()[t].astNode.kind === 'ObjectTypeDefinition' && t !== 'Query' && t !== 'Mutation';\n  });\n}\n\n/**\n * Generate type extensions for each type:\n *   - add _id field\n * @param {string[]} types\n * @param schema\n * @param {string} sdl\n * @returns {string} SDL type extensions\n */\nfunction augmentTypes(types, schema, sdl) {\n  return types.reduce(function (acc, t) {\n    if (t === 'Mutation' || t === 'Query') {\n      return acc + '';\n    } else {\n      return acc + ('\\n    \\n    extend type ' + t + ' {\\n      _id: ID\\n    }\\n    ');\n    }\n  }, sdl);\n}\n\nfunction augmentMutations(types, schema, sdl) {\n  // FIXME: requires placeholder Query type?\n  return sdl + ('\\n    extend schema {\\n      mutation: Mutation\\n    }\\n\\n  \\n    type Mutation {\\n  \\n    ' + types.reduce(function (acc, t) {\n    return acc + ('\\n      ' + createMutation(schema.getTypeMap()[t]) + '\\n      ' + addRelationshipMutations(schema.getTypeMap()[t]) + ' \\n    ');\n  }, '') + '\\n\\n  }');\n}\n\nfunction createMutation(type) {\n  return 'Create' + type.name + '(' + paramSignature(type) + '): ' + type.name;\n}\n\nfunction addRelationshipMutations(type) {\n  var namesOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var mutations = '';\n  var mutationNames = [];\n\n  var relationshipFields = (0, _keys2.default)(type.getFields()).filter(function (x) {\n    for (var i = 0; i < type.getFields()[x].astNode.directives.length; i++) {\n      if (type.getFields()[x].astNode.directives[i].name.value === 'relation') {\n        return true;\n      }\n    }\n  });\n\n  relationshipFields.forEach(function (x) {\n    var relationDirective = type.getFields()[x].astNode.directives.filter(function (d) {\n      return d.name.value === 'relation';\n    })[0];\n\n    var relTypeArg = void 0,\n        directionArg = void 0,\n        fromType = void 0,\n        toType = void 0;\n\n    try {\n      relTypeArg = relationDirective.arguments.filter(function (a) {\n        return a.name.value === 'name';\n      })[0];\n    } catch (e) {\n      throw new Error('No name argument specified on @relation directive');\n    }\n\n    try {\n      directionArg = relationDirective.arguments.filter(function (a) {\n        return a.name.value === 'direction';\n      })[0];\n    } catch (e) {\n      // FIXME: should we ignore this error to define default behavior?\n      throw new Error('No direction argument specified on @relation directive');\n    }\n\n    if (directionArg.value.value === 'OUT' || directionArg.value.value === 'out') {\n      fromType = type;\n      toType = innerType(type.getFields()[x].type);\n    } else {\n      fromType = innerType(type.getFields()[x].type);\n      toType = type;\n      return; // don't create duplicate definition of mutation (only for one direction)\n    }\n\n    var fromPk = primaryKey(fromType);\n    var toPk = primaryKey(toType);\n\n    // FIXME: could add relationship properties here\n    mutations += '\\n    Add' + fromType.name + toType.name + '(' + (0, _utils.lowFirstLetter)(fromType.name + fromPk.name) + ': ' + innerType(fromPk.type).name + '!, ' + (0, _utils.lowFirstLetter)(toType.name + toPk.name) + ': ' + innerType(toPk.type).name + '!): ' + fromType.name + ' @MutationMeta(relationship: \"' + relTypeArg.value.value + '\", from: \"' + fromType.name + '\", to: \"' + toType.name + '\")\\n    ';\n\n    mutationNames.push('Add' + fromType.name + toType.name);\n  });\n\n  if (namesOnly) {\n    return mutationNames;\n  } else {\n    return mutations;\n  }\n}\n\n/**\n * Returns the field to be treated as the \"primary key\" for this type\n * Primary key is determined as the first of:\n *   - non-null ID field\n *   - ID field\n *   - first String field\n *   - first field\n *\n * @param {ObjectTypeDefinition} type\n * @returns {FieldDefinition} primary key field\n */\nfunction primaryKey(type) {\n  // Find the primary key for the type\n  // first field with a required ID\n  // if no required ID type then first required type\n\n  var pk = firstNonNullAndIdField(type);\n  if (!pk) {\n    pk = firstIdField(type);\n  }\n\n  if (!pk) {\n    pk = firstNonNullField(type);\n  }\n\n  if (!pk) {\n    pk = firstField(type);\n  }\n  return pk;\n}\n\nfunction paramSignature(type) {\n  return (0, _keys2.default)(type.getFields()).reduce(function (acc, f) {\n    if (f === '_id' || innerType(type.getFields()[f].type).astNode && innerType(type.getFields()[f].type).astNode.kind === 'ObjectTypeDefinition') {\n      // TODO: exclude @cypher fields\n      // TODO: exclude object types?\n      return acc + '';\n    } else {\n      return acc + (' ' + f + ': ' + innerType(type.getFields()[f].type).name + ',');\n    }\n  }, '');\n}\n\nfunction innerType(type) {\n  return type.ofType ? innerType(type.ofType) : type;\n}\n\nfunction firstNonNullAndIdField(type) {\n  var fields = (0, _keys2.default)(type.getFields()).filter(function (t) {\n    return type.getFields()[t].type.constructor.name === 'GraphQLNonNull' && innerType(type.getFields()[t].type.name === 'ID');\n  });\n\n  if (fields.length === 0) {\n    return undefined;\n  } else {\n    return type.getFields()[fields[0]];\n  }\n}\n\nfunction firstIdField(type) {\n  var fields = (0, _keys2.default)(type.getFields()).filter(function (t) {\n    return innerType(type.getFields()[t].type.name === 'ID');\n  });\n\n  if (fields.length === 0) {\n    return undefined;\n  } else {\n    return type.getFields()[fields[0]];\n  }\n}\n\nfunction firstNonNullField(type) {\n  var fields = (0, _keys2.default)(type.getFields()).filter(function (t) {\n    return type.getFields()[t].type.constructor.name === 'GraphQLNonNull';\n  });\n\n  if (fields.length === 0) {\n    return undefined;\n  } else {\n    return type.getFields()[fields[0]];\n  }\n}\n\nfunction firstField(type) {\n  return type.getFields()[(0, _keys2.default)(type.getFields())[0]];\n}"]}