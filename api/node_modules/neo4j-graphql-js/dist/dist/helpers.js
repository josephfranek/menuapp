"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require("babel-runtime/core-js/object/assign");

var _assign2 = _interopRequireDefault(_assign);

var _toArray2 = require("babel-runtime/helpers/toArray");

var _toArray3 = _interopRequireDefault(_toArray2);

exports.parseArgs = parseArgs;
exports.cypherDirectiveArgs = cypherDirectiveArgs;

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function parseArgs(args) {
  var argArr = args.map(function (v) {
    var key = v.name.value,
        value = v.value.value;
    var obj = {};
    obj[key] = value;
    return obj;
  });

  var _argArr = (0, _toArray3.default)(argArr),
      head = _argArr[0],
      tail = _argArr.slice(1);

  return (0, _assign2.default)(head, tail);
}

function cypherDirectiveArgs(variable, headSelection) {
  var defaultArgs = { "this": variable };
  var schemaArgs = {};
  var queryArgs = parseArgs(headSelection.arguments);
  console.log(queryArgs);

  return "{this: " + variable + "}";

  // strip quotes from object keys for schema and query args
  //return JSON.stringify(Object.assign(defaultArgs, schemaArgs, queryArgs)).replace(/\"([^(\")"]+)\":/g,"$1:");

  // strip quotes and braces for default arg this
  //JSON.stringify(t).replace(/\"/g,'').replace(/{/g,'').replace(/}/g,'')

  //var parse = function(a){a.map( function(v){return {v.name.value: v.value.value}; } )};
}
//# sourceMappingURL=helpers.js.map